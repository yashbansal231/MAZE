#include<iostream>
#include<vector>
using namespace std;
bool DFS(int x, int y,bool visited[][10],int n, int m, int mat[][10], int dest_x, int dest_y)
    {
        if(x == dest_x && y == dest_y)
        return true;
    if(x > n || y > m)
        return false;
    if(x < 0 || y < 0)
        return false;
    if(visited[x][y] == true)
        return false;
    if(mat[x][y] == 0)
        return false;
    visited[x][y] = true;
    if (DFS(x+1, y, visited, n, m, mat,  dest_x, dest_y) == true)
        return true;
    if (DFS(x-1, y, visited, n, m, mat,  dest_x, dest_y) == true)
        return true;
    if (DFS(x, y+1, visited, n, m, mat,  dest_x, dest_y) == true)
        return true;
    if (DFS(x, y-1, visited, n, m, mat,  dest_x, dest_y) == true)
        return true;
    return false;
    }
int main(){
    int n,m;
    cin>>n>>m;
    int a[n][10];
    bool visited[n][10];
    for(int i=0;i<n; i++)
    for(int j=0; j<m; j++)
    {
        cin>>a[i][j];
        visited[i][j]=false;
    }
   bool ans= DFS(0,0,visited,n-1,m-1,a,n-1,m-1);
    if(ans==1)
    cout<<"Yes";
    else
    cout<<"No";
}
